/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screens;

import java.awt.Color;
import data.disasterList;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import screens.AdminScreen;
import static screens.AdminScreen.disasterDateText;
import static screens.AdminScreen.disasterDescriptionText;
import static screens.AdminScreen.disasterDonationCollectionText;
import static screens.AdminScreen.disasterDonationGoalText;
import static screens.AdminScreen.disasterImageText;
import static screens.AdminScreen.disasterLocationText;
import static screens.AdminScreen.disasterTypeText;

/**
 *
 * @author eudyl
 */
public class AdminSearchDisasterScreen extends javax.swing.JFrame {

    //Define list elements
    public static int disasterIndex;

    //Define colors
    Color blackColor = new Color(0, 0, 0);
    Color clickedColor = new Color(255, 51, 51);

    //Create instances of DisasterList and AllDisasterName
    disasterList dataDisasterList = new disasterList();
    ArrayList<String> disasters = new ArrayList<String>();
    AdminScreen admin = new AdminScreen();

    //Create instance of DefaultListModel
    DefaultListModel defaultListModel = new DefaultListModel();

    /**
     * Creates new form AdminSearchDisasterScreen
     */
    public AdminSearchDisasterScreen() {

        initComponents();
        getDisasterType();
        noResultsImage.setVisible(false);
        noResultsImageText.setVisible(false);
        searchResultScrollPane.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backgroundColor = new javax.swing.JPanel();
        searchText = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        defaultImage = new javax.swing.JLabel();
        defaultImageText = new javax.swing.JLabel();
        noResultsImage = new javax.swing.JLabel();
        noResultsImageText = new javax.swing.JLabel();
        backButton = new javax.swing.JLabel();
        searchResultScrollPane = new javax.swing.JScrollPane();
        searchResultsList = new javax.swing.JList<>();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundColor.setBackground(new java.awt.Color(255, 255, 255));
        backgroundColor.setForeground(new java.awt.Color(255, 255, 255));
        backgroundColor.setPreferredSize(new java.awt.Dimension(350, 450));
        backgroundColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backgroundColorMouseClicked(evt);
            }
        });
        backgroundColor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchText.setFont(new java.awt.Font("Verdana", 3, 18)); // NOI18N
        searchText.setForeground(new java.awt.Color(0, 0, 0));
        searchText.setText("<html><i>Search for a <font color=\"#FF3333\">Disaster</i></html>");
        backgroundColor.add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        searchTextField.setBackground(new java.awt.Color(255, 255, 255));
        searchTextField.setFont(new java.awt.Font("SansSerif", 2, 13)); // NOI18N
        searchTextField.setForeground(new java.awt.Color(0, 0, 0));
        searchTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchTextField.setText("üîç Search");
        searchTextField.setToolTipText("Search for disasters in the database...");
        searchTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(242, 243, 247), 3, true));
        searchTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextFieldMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchTextFieldMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchTextFieldMouseExited(evt);
            }
        });
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyTyped(evt);
            }
        });
        backgroundColor.add(searchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 288, 24));

        defaultImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/screens/adminScreen/AdminSearchDisasterScreenElement2.png"))); // NOI18N
        backgroundColor.add(defaultImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 300, 254));

        defaultImageText.setFont(new java.awt.Font("Corbel", 3, 13)); // NOI18N
        defaultImageText.setForeground(new java.awt.Color(255, 51, 51));
        defaultImageText.setText("Search for exisiting disasters available in the database");
        backgroundColor.add(defaultImageText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 320, -1));

        noResultsImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/screens/adminScreen/AdminSearchDisasterScreenElement1.png"))); // NOI18N
        backgroundColor.add(noResultsImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 300, 267));

        noResultsImageText.setFont(new java.awt.Font("Corbel", 3, 13)); // NOI18N
        noResultsImageText.setForeground(new java.awt.Color(255, 51, 51));
        noResultsImageText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noResultsImageText.setText("Sorry, we couldn't find any matches");
        backgroundColor.add(noResultsImageText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 320, -1));

        backButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        backButton.setForeground(new java.awt.Color(0, 0, 0));
        backButton.setText("< Back");
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backButtonMouseExited(evt);
            }
        });
        backgroundColor.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        searchResultsList.setBackground(new java.awt.Color(255, 255, 255));
        searchResultsList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        searchResultsList.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        searchResultsList.setForeground(new java.awt.Color(0, 0, 0));
        searchResultsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        searchResultsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        searchResultsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchResultsListMouseClicked(evt);
            }
        });
        searchResultScrollPane.setViewportView(searchResultsList);

        backgroundColor.add(searchResultScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 290, 340));

        getContentPane().add(backgroundColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void getDisasterType() {
        for (int i = 0; i < dataDisasterList.disasterInitList.size(); i++) {
            disasters.add(dataDisasterList.disasterInitList.get(i).type);
            defaultListModel.addElement(dataDisasterList.disasterInitList.get(i).type);

        }

        searchResultsList.setModel(defaultListModel);
        searchText.requestFocus();

    }

    private void filterSearchResults(String input) {

        DefaultListModel filteredResults = new DefaultListModel();

        for (int i = 0; i < disasters.size(); i++) {

            String dName = disasters.get(i).toLowerCase();
            if (dName.contains(input.toLowerCase())) {
                filteredResults.addElement(disasters.get(i));

            }

        }

        defaultListModel = filteredResults;
        searchResultsList.setModel(defaultListModel);

        if (defaultListModel.isEmpty()) {
            noResultsImage.setVisible(true);
            noResultsImageText.setVisible(true);
            searchResultScrollPane.setVisible(false);

        }

    }


    private void searchTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextFieldMouseClicked
        // TODO add your handling code here:
        if (searchTextField.getText().isBlank() || searchTextField.getText().equals("üîç Search")) {
            searchTextField.setText("");
            defaultImage.setVisible(false);
            defaultImageText.setVisible(false);
            searchResultScrollPane.setVisible(true);

        }

    }//GEN-LAST:event_searchTextFieldMouseClicked

    private void searchTextFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextFieldMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_searchTextFieldMouseEntered

    private void searchTextFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextFieldMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_searchTextFieldMouseExited

    private void searchResultsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultsListMouseClicked
        // TODO add your handling code here:
        String selectedDisaster = searchResultsList.getSelectedValue();
        System.out.println(selectedDisaster);
        for (int i = 0; i < dataDisasterList.disasterInitList.size(); i++) {
            if (dataDisasterList.disasterInitList.get(i).type.equals(selectedDisaster)) {
                System.out.println(dataDisasterList.disasterInitList.get(i).type);
                disasterIndex = i;
                disasterTypeText.setText(dataDisasterList.disasterInitList.get(i).type);
                disasterDateText.setText(dataDisasterList.disasterInitList.get(i).date);
                disasterLocationText.setText(dataDisasterList.disasterInitList.get(i).location);
                disasterDescriptionText.setText(dataDisasterList.disasterInitList.get(i).description);
                disasterImageText.setText(dataDisasterList.disasterInitList.get(i).imageUrl_potrait);
                disasterDonationCollectionText.setText(String.valueOf(dataDisasterList.disasterInitList.get(i).donationCollection));
                disasterDonationGoalText.setText(String.valueOf(dataDisasterList.disasterInitList.get(i).donationGoal));

                admin.disasterDtm = new DefaultTableModel(admin.disasterHeader, 0);
                admin.allCurrentDisastersTable.setModel(admin.disasterDtm);

                admin.setDisasterTable();
                admin.disasterClick++;
                admin.allPanes.setSelectedIndex(1);
                admin.setVisible(true);
                dispose();
            }

        }


    }//GEN-LAST:event_searchResultsListMouseClicked

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        // TODO add your handling code here:
        filterSearchResults(searchTextField.getText());

    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void backgroundColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundColorMouseClicked
        // TODO add your handling code here:
        if (searchTextField.getText().isBlank()) {
            searchTextField.setText("üîç Search");
            defaultImage.setVisible(true);
            defaultImageText.setVisible(true);
            searchResultScrollPane.setVisible(false);

        }

        searchText.requestFocus();
    }//GEN-LAST:event_backgroundColorMouseClicked

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // TODO add your handling code here:
        admin.disasterDtm = new DefaultTableModel(admin.disasterHeader, 0);
        admin.allCurrentDisastersTable.setModel(admin.disasterDtm);

        admin.setDisasterTable();
        admin.disasterClick++;
        admin.allPanes.setSelectedIndex(1);
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonMouseClicked

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered
        // TODO add your handling code here:
        backButton.setForeground(clickedColor);
    }//GEN-LAST:event_backButtonMouseEntered

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseExited
        // TODO add your handling code here:
        backButton.setForeground(blackColor);
    }//GEN-LAST:event_backButtonMouseExited

    private void searchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_searchTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminSearchDisasterScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminSearchDisasterScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminSearchDisasterScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminSearchDisasterScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminSearchDisasterScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backButton;
    private javax.swing.JPanel backgroundColor;
    private javax.swing.JLabel defaultImage;
    private javax.swing.JLabel defaultImageText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel noResultsImage;
    private javax.swing.JLabel noResultsImageText;
    private javax.swing.JScrollPane searchResultScrollPane;
    private javax.swing.JList<String> searchResultsList;
    private javax.swing.JLabel searchText;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
}
